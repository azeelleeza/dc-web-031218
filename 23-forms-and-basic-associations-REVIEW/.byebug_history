exit
self.artist.name
self.artist_id = 1
self.artist.name
self.artist.id
Artist.all
self
self.notes
self.save
self
notes.reject(&:empty?).map { |n| Note.create(content: n) }
self.notes
self
notes
exit
notes
continue
notes
continue
self.notes
self
exit
self.notes << _notes.map{|n| Note.create(content: n)}
self.notes
self.notes << _notes.map{|n| Note.create(content: n)}
self
_notes
exit
song_params
exit
params[:song]
song_params
exit
continue
exit
song_params
exit
song_params
exit
song_params
continue
@song.artist
@song
exit
s
s = Song.new(song_params)
Song.new(song_params)
song_params
Song.new(song_params)
song_params
exit
Song.new(song_params)
song_params
exit
params[:song]
song_params
params
exit
@song
@song = Song.new(song_params)
@song
Song.new(song_params)
song_params
@ong
Song.new(song_params)
song_params
exit
@song.artist.name
@song.artist
@song
continue
exit
@song
exit
Artist.first
@song
exit
self.notes
self
self.notes
self
self.notes << notes.map { |n| Note.create(content: n) }
 notes.map { |n| Note.create(content: n) }
notes
exit
notes
continue
self.artist_id = Artist.find_or_create_by(name: name).id
self.artist_id = Artist.find_or_create_by(name: name).pluck(:id)
self.artist_id = a.id
self
a
a = Artist.find_or_create_by(name: name)
a = _
Artist.find_or_create_by(name: name)
Artist.find_by(name: name)
name
continue
exit
song_params
exit
song_params
exit
exilt
Song.new(song_params)
song_params
exit
params
song_params
exit
params
exit
params
exit
params
exit
@song.notes
@song
exit
@song.artist_name = artist_params
params
continue
